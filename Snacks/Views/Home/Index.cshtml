﻿@using Microsoft.AspNetCore.Components
@using Newtonsoft.Json
@using System.Globalization;

@{
    ViewData["Title"] = "Snacks";
    Layout = "_Layout";



}

<div class="text-center">


    <div>
        @{
        <h2>
            Snack1!!<br><br>
            1. Dichiarare una variabile valorizzandola con il nostro nome.
            Dichiarare un'altra variabile valorizzandola con il nostro cognome.
            Stampare il nostro nome e cognome all'interno di un tag h2.
        </h2>
      
            string nome = "Gabriele";
            string cognome = "Palma";

            <br>

            <h2>@nome @cognome</h2>

            <br>

            <br>
       

        <h2>
            Snack2!!<br><br>
            2. Creare una funzione che stampa la somma dei numeri che vanno 
            da 1 a n (con n passato come parametro - n incluso)
            Stampare dentro uno span il risultato.
        </h2>
      

            int somma(int n)
            {
               
               
                int somma = 0;

                for(int i=0; i<=n;i++)
                {
                    somma += i;
                }

                return somma;
            }
           

            <br>

            <h2>La somma sar&agrave;: @somma(10)</h2>
            <br>

            <br>

            <h2>
                Snack3!!<br><br>
                3. Contare quante volte la lettera a è presente nalla frase "nel mezzo del cammin di nostra vita" e stampare questo valore in pagina
            </h2>


            int count(string word, char value)
            {

               return word.Count(lecter => lecter == value);
              
            }


            <br>

            <h2>la lettera a &egrave; presente:@count("nel mezzo del cammin di nostra vita",'a') volte</h2>
            <br>

            <br>

            <h2>
                Snack4!!<br><br>
                4. Creare una List<int> di 20 numeri interi (generati random da 1 a 90, 1 e 90 inclusi) e
                   mostrare in pagina solo i numeri compresi tra 20 e 70

            </h2>


             
          
                Random random = new Random();
                List<int> numeri = new List<int>();
                for (int i = 0; i <= 20; i++)
                {
                    numeri.Add(random.Next(1, 91)); // Genera numeri casuali da 1 a 90 inclusi
                }

                List<int> numeriFiltrati = numeri.Where(num => num >= 20 && num <= 70).ToList(); //primo metodo


                //secodno metodo
                List<int> numeriFiltrati2 = new List<int>();

                foreach (int numero in numeri)
                {
                    if (numero >= 20 && numero <= 70)
                    {
                        numeriFiltrati2.Add(numero);
                    }
                }

            <h2>Numeri Filtrati:</h2>
            <ul>
                @foreach (int numero in numeriFiltrati2)
                {
                    
                    <li>@numero</li>
                    
                }
            </ul>

            <br>

            <br>

            <h2>
                Snack5!!<br><br>
                5. Stampare in pagina la data e l'ora attuale (usando la classe DateTime) 
                    con il formato anno-mese-giorno ore:minuti:secondi

            </h2>

            string date()
            {
                DateTime now = DateTime.Now;

                return now.ToString("yyyy-MM-dd HH:mm:ss");

            }


            <br>

            <h2>La data odierna &egrave; @date()</h2>
            <br>

            <br>

            <h2>
                Snack6!!<br><br>
                6. Partendo dalla data di oggi (usando la classe DateTime) stampare in pagina
                a. la data di 7 giorni fa
                b. che giorno della settimana è oggi (il risultato dovrà  essere il nome del giorno (Lunedì, Martedì, ...)
                c. che giorno della settimana sarà nello stesso giorno e mese di oggi ma tra un anno (il risultato dovrÃ  essere il nome del giorno (Lunedì, Martedì, ...)
            </h2>

            string date2()
            {
                DateTime oggi = DateTime.Today;

                DateTime TotgiorniInditetro = oggi.AddDays(-7);

                return TotgiorniInditetro.ToString("yyyy-MM-dd HH:mm:ss");

            }

            string date3()
            {
                // Impostazione della cultura italiana
                CultureInfo culture = new CultureInfo("it-IT");

                DateTime oggi = DateTime.Today;

                string giornoSettimana = culture.DateTimeFormat.GetDayName(oggi.DayOfWeek);

                return giornoSettimana;

            }

            string date4()
            {
                // Impostazione della cultura italiana
                CultureInfo culture = new CultureInfo("it-IT");

                DateTime oggi = DateTime.Today;

                string giornoSettimanaProxYear = culture.DateTimeFormat.GetDayName(oggi.AddYears(1).DayOfWeek);

                return giornoSettimanaProxYear;

            }


            <br>

            <h2>Data di 7 giorni f&agrave; @date2()</h2>
            <br>
            <h2>Oggi &egrave; @date3()</h2>
            <br>
            <h2>Tra un anno questo giorno sar&agrave; @date4()</h2>
            <br>


        }

       
    </div>

</div>